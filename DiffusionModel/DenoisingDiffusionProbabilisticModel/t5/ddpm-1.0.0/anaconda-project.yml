# This is an Anaconda project file.
#
# Here you can describe your project and how to run it.
# Use `anaconda-project run` to run the project.
# The file is in YAML format, please see http://www.yaml.org/start.html for more.
#
# to activate the env digit 'conda activate envs/default'
#
# Set the 'name' key to name your project
#
name: DDPMs-Pytorch

#
# Set the 'icon' key to give your project an icon
#
icon:

#
# Set a one-sentence-or-so 'description' key with project details
#
description: Implementation of DDPMs in Pytorch to understand how they work

#
# In the commands section, list your runnable scripts, notebooks, and other code.
# Use `anaconda-project add-command` to add commands.
#
commands:
  train:
    unix: python train.py accelerator=gpu devices=1
    env_spec: default
  train-cpu:
    unix: python train.py accelerator=cpu devices=1
    env_spec: default
  test:
    unix: pytest tests
    env_spec: default
  generate:
    unix: python generate.py
    env_spec: default

variables:
  PYTHONPATH: ./
  HYDRA_FULL_ERROR: 1


# In the services section, list any services that should be
# available before your code runs.
# Use `anaconda-project add-service` to add services.
#
services: {}

#
# In the downloads section, list any URLs to download to local files
# before your code runs.
# Use `anaconda-project add-download` to add downloads.
#
downloads: {}

#
# In the packages section, list any packages that must be installed
# before your code runs.
# Use `anaconda-project add-packages` to add packages.
#
packages:
- python=3.9
- matplotlib
- seaborn
- numpy
- pytorch=1.12.1
- torchvision
- pip:
  - pytorch-lightning
  - path
  - tensorguard
  - hydra-core
- pytest
channels:
- pytorch

#
# In the platforms section, list platforms the project should work on
# Examples: "linux-64", "osx-64", "win-64"
# Use `anaconda-project add-platforms` to add platforms.
#
platforms: []
#
# You can define multiple, named environment specs.
# Each inherits any global packages or channels,
# but can have its own unique ones also.
# Use `anaconda-project add-env-spec` to add environment specs.
#
env_specs:
  default:
    description: Default environment spec for running commands
    packages:
    - cudatoolkit=10.2
    - pip: []
    channels:
    - pytorch
    platforms:
    - linux-64
    # - osx-64  # remove cudatoolkit to support mac
    - win-64
#  pytorch-cpu:
#    packages:
#    - cpuonly
#    channels:
#    - pytorch
#    platforms:
#    - linux-64
#    - win-64
